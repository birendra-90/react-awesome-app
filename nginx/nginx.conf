worker_processes 4;

events { worker_connections 1024; }

http {

	upstream node-app {
      least_conn;
	    server node1:3000 weight=10 max_fails=3 fail_timeout=30s;
	    server node2:3000 weight=10 max_fails=3 fail_timeout=30s;
	    server node3:3000 weight=10 max_fails=3 fail_timeout=30s;
	}

	server {
		listen 80;
		listen [::]:80;

		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl;# http2;
	  listen [::]:443 ssl;# http2;

		keepalive_timeout 60;

		charset utf-8;

		ssl on;
		# enable dh
		ssl_dhparam /etc/nginx/ssl/dh.pem;

		ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

		# protocols
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # disable poodle

    # add_header Strict-Transport-Security 'max-age=604800';
		add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

		ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 5m;
		ssl_prefer_server_ciphers on;
		# ssl_ciphers  "HIGH:!RC4:!aNULL:!MD5:!kEDH";
		ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
		ssl_stapling on;
		resolver 8.8.8.8;

		# hide nginx version
		server_tokens off;

		# add nosniff header (https://www.owasp.org/index.php/List_of_useful_HTTP_headers)
		add_header X-Content-Type-Options nosniff;

		# logs
		access_log  /var/logs/nginx.access.log;
		error_log  /var/logs/nginx.error.log;

		# index should not be cached, it works from nodes
		rewrite ^/index.html$ / permanent;

		location / {
		  error_page 403 = @node;
    	root /var/www;
			index index.htm;
    	try_files $uri $uri/ @node;
    	expires max;
    	access_log off;
		}

		location @node {
			proxy_pass http://node-app;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}
	}
}
