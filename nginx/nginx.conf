worker_processes 4;

events { worker_connections 1024; }

http {

		sendfile on;
		sendfile_max_chunk 1m;

		tcp_nopush on;
		tcp_nodelay on;
		keepalive_timeout 65;
		types_hash_max_size 2048;

		server_tokens off;

		charset utf-8;

		# server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##
		access_log  /var/logs/nginx.access.log;
		error_log  /var/logs/nginx.error.log;

		##
    # Gzip Settings
    ##
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;


	upstream node-app {
      least_conn;
	    server node1:3000 weight=10 max_fails=3 fail_timeout=30s;
	    server node2:3000 weight=10 max_fails=3 fail_timeout=30s;
	    server node3:3000 weight=10 max_fails=3 fail_timeout=30s;
	}

	server {
		listen 80;
		listen [::]:80;

		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl;# http2;
	  listen [::]:443 ssl;# http2;

		ssl on;
		# enable dh
		ssl_dhparam /etc/nginx/ssl/dh.pem;

		ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

		# protocols
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # disable poodle

    # add_header Strict-Transport-Security 'max-age=604800';
		add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

		ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 5m;
		ssl_prefer_server_ciphers on;
		# ssl_ciphers  "HIGH:!RC4:!aNULL:!MD5:!kEDH";
		ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
		ssl_stapling on;
		resolver 8.8.8.8;

		# add nosniff header (https://www.owasp.org/index.php/List_of_useful_HTTP_headers)
		add_header X-Content-Type-Options nosniff;

		# index should not be cached, it works from nodes
		rewrite ^/index.html$ / permanent;

		location / {
			access_log off;
    	root /var/www;
			index index.htm;
			error_page 403 = @node;

    	try_files $uri $uri/ @node;
    	expires max;
			add_header Vary Accept-Encoding;
			# add_header Cache-Control "public";
			add_header Pragma public;
    	add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		}

		location @node {
			proxy_pass http://node-app;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
			proxy_connect_timeout       5;
      proxy_send_timeout          5;
      proxy_read_timeout          5;
      send_timeout                5;
			expires -1;
    	add_header Pragma "no-cache";
    	add_header Cache-Control "no-store, no-cache, must-revalidate,  post-check=0, pre-check=0";
		}
	}
}
